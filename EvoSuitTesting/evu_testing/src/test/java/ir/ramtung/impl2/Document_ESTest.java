/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 14 19:24:21 GMT 2024
 */

package ir.ramtung.impl2;

import org.junit.Test;
import static org.junit.Assert.*;
import ir.ramtung.impl2.Book;
import ir.ramtung.impl2.Magazine;
import ir.ramtung.impl2.Reference;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import static org.evosuite.runtime.EvoAssertions.*;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Document_ESTest extends Document_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0()  throws Throwable  {
        try {
            Magazine magazine0 = new Magazine((String) null, 0, (-1434), 0);
            fail("Expected to throw something");
        }catch (Exception e){
            verifyException("ir.ramtung.impl2.Magazine", e);
        }
    }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Reference reference0 = new Reference("w7", 392);
      reference0.title = "";
      reference0.getTitle();
      assertEquals(392, reference0.getCopies());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Reference reference0 = new Reference("F$?Q4kD]b<z}", 0);
      reference0.day = 0;
      int int0 = reference0.getDay();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Magazine magazine0 = new Magazine("", (-735), (-735), (-735));
      magazine0.day = (-1099);
      int int0 = magazine0.getDay();
      assertEquals((-1099), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Magazine magazine0 = new Magazine("", (-735), (-735), (-735));
      magazine0.copies = (-1);
      magazine0.returnBook();
      magazine0.barrowBook();
      magazine0.returnBook();
      magazine0.returnBook();
      magazine0.barrowBook();
      int int0 = magazine0.getCopies();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Magazine magazine0 = new Magazine("w7", 1, 1, 1);
      magazine0.barrowBook();
      try {
          magazine0.barrowBook();
          fail("Copies out of run exception");
      }catch (Exception e){
          verifyException("ir.ramtung.impl2.Magazine", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Book book0 = new Book("ir.ramtung.impl2.Document", 856);
      book0.calculatePenalty(856);
      assertEquals(856, book0.getCopies());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Magazine magazine0 = new Magazine("w7", 1, 1, 1);
      int int0 = magazine0.getCopies();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Reference reference0 = new Reference("w7", 392);
      reference0.getTitle();
      assertEquals(392, reference0.getCopies());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Book book0 = new Book("ir.ramtung.impl2.Document", 856);
      int int0 = book0.getDay();
      assertEquals(10, int0);
      assertEquals(856, book0.getCopies());
  }
}
