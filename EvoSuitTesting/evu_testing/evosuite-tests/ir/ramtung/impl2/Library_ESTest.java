/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 14 19:30:01 GMT 2024
 */

package ir.ramtung.impl2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ir.ramtung.impl2.Library;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Library_ESTest extends Library_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Library library0 = new Library();
      library0.timePass(0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("EC/7bne", (-1553));
      List<String> list0 = library0.availableTitles();
      assertFalse(list0.contains("EC/7bne"));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("reference name is empty");
      library0.extend("reference name is empty", "FB?s");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("ir.ramtung.impl2.Book", 14);
      library0.addReference("", 14);
      library0.borrow((String) null, "");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("", 0);
      try { 
        library0.borrow((String) null, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // this book doesnt exist
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("1L@F?{A", 1520);
      library0.addReference("student name is empty", (-1));
      try { 
        library0.borrow("1XTH", "student name is empty");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // this book doesnt exist
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addMagazine("!", 2260, (-1934403862), 2260);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine`s number is incorrect
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addMagazine("magazine`s year is incorrect", 0, 0, 1337);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine`s year is incorrect
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine("the member has already added", 1, 21, 0);
      library0.addStudentMember("jt,0W:A", "days cant be negative");
      library0.borrow("days cant be negative", "a");
      library0.timePass(1225);
      int int0 = library0.getTotalPenalty("days cant be negative");
      assertEquals(2446000, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      library0.timePass(2147483645);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("^");
      library0.addReference("h[GnU>2}F$p", (-2775));
      library0.borrow("^", "^");
      try { 
        library0.extend("^", "^");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cant extend
         //
         verifyException("ir.ramtung.impl2.Person", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addStudentMember((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addReference((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addProfMember((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addMagazine((String) null, (-160), (-160), (-160));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addBook((String) null, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.timePass((-11));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // days cant be negative
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("49he^2>F/PDk+:8j.c", 1817);
      List<String> list0 = library0.availableTitles();
      assertTrue(list0.contains("49he^2>F/PDk+:8j.c"));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine("the member has already added", 1, 21, 0);
      List<String> list0 = library0.availableTitles();
      assertFalse(list0.contains("the member has already added"));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("jt,0W:A", "days cant be negative");
      int int0 = library0.getTotalPenalty("days cant be negative");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("jt,0W:A", "days cant be negative");
      int int0 = library0.getTotalPenalty("book name is empty");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("49he^2>F/PDk+:8j.c", "49he^2>F/PDk+:8j.c");
      library0.returnDocument("49he^2>F/PDk+:8j.c", "k;P(#e13O#:`J");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("jt,0W:A", "days cant be negative");
      library0.returnDocument("jt,0W:A", "f77zRZ@>gzZIOIn");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("jt,0W:A", "days cant be negative");
      library0.extend("f77zRZ@>gzZIOIn", "l0O");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("");
      library0.borrow("KRMV ", (String) null);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine("!", 2260, 2260, 2260);
      try { 
        library0.addReference("!", 2260);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the reference has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addReference(" ", (-706));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // reference name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addMagazine("", 1, 0, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine`s number is incorrect
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addMagazine("!", (-226), (-226), (-226));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine`s year is incorrect
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("^", 0);
      try { 
        library0.addMagazine("^", 0, 0, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the magazine has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addMagazine(" ", (-182), (-182), (-182));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine("the member has already added", 1, 21, 0);
      library0.addMagazine("y", 3002, 3002, 3002);
      library0.borrow("days cant be negative", "a");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("T f</.d7hE=r~", 1634);
      try { 
        library0.addBook("T f</.d7hE=r~", 1634);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the book has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("1L@F?{A", 1520);
      library0.addBook("ir.ramtung.impl2.Library", 1817);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addBook(" ", 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // book name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("magazine`s year is incorrect");
      try { 
        library0.addProfMember("magazine`s year is incorrect");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the member has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("^");
      library0.addProfMember("]");
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addProfMember(" ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // prof name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("ir.ramtung.impl2.Book", "magazine name is empty");
      library0.addStudentMember("(<\"~!Hl\rzE6+a?'}s", "book name is empty");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("k!");
      try { 
        library0.addStudentMember("k!", "k!");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the member has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addStudentMember("lz(<MWQ.q9", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // student name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addStudentMember("", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // student id is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("jt,0W:A", "days cant be negative");
      // Undeclared exception!
      try { 
        library0.borrow("days cant be negative", "a");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }
}
